"use strict";(self.webpackChunk_inversifyjs_inversify_docs_site=self.webpackChunk_inversifyjs_inversify_docs_site||[]).push([["5055"],{3956:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>r,toc:()=>h,default:()=>u,metadata:()=>a,assets:()=>l,contentTitle:()=>c});var a=JSON.parse('{"id":"fundamentals/lifecycle/deactivation","title":"Deactivation","description":"Whenever a singleton scoped service is unbound, the deactivation event is dispatched. A deactivation handler receives a resolved value and returns nothing.","source":"@site/versioned_docs/version-7.x/fundamentals/lifecycle/deactivation.mdx","sourceDirName":"fundamentals/lifecycle","slug":"/fundamentals/lifecycle/deactivation","permalink":"/docs/fundamentals/lifecycle/deactivation","draft":false,"unlisted":false,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Deactivation"},"sidebar":"tutorialSidebar","previous":{"title":"Activation","permalink":"/docs/fundamentals/lifecycle/activation"},"next":{"title":"Inheritance","permalink":"/docs/fundamentals/inheritance"}}'),t=i(9970),o=i(7245),s=i(9981),d=i(126);let r={sidebar_position:2,title:"Deactivation"},c,l={},h=[];function p(e){let n={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Whenever a singleton scoped service is unbound, the deactivation event is dispatched. A deactivation handler receives a resolved value and returns nothing."}),"\n",(0,t.jsx)(d.A,{language:"ts",children:s}),"\n",(0,t.jsx)(n.p,{children:"It's possible to add a deactivation handler in multiple ways"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Adding the handler to the ",(0,t.jsx)(n.a,{href:"/docs/api/container#ondeactivation",children:"container"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Adding the handler to a ",(0,t.jsx)(n.a,{href:"/docs/api/binding-syntax#ondeactivation",children:"binding"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Adding the handler to the class through the ",(0,t.jsx)(n.a,{href:"/docs/api/decorator#predestroy",children:"preDestroy decorator"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Handlers added to the container are the first ones to be resolved. Any handler added to a child container is called before the ones added to their parent. Relevant bindings from the container are called next and finally the ",(0,t.jsx)(n.code,{children:"preDestroy"}),' method is called. In the example above, relevant bindings are those bindings bound to the unbinded "Destroyable" service identifier.']})]})}function u(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},9981:function(e){e.exports="interface Weapon {\n  damage: number;\n}\n\nclass Katana implements Weapon {\n  readonly #damage: number = 10;\n\n  public get damage(): number {\n    return this.#damage;\n  }\n}\n\nconst container: Container = new Container();\n\ncontainer.bind<Weapon>('Weapon').to(Katana).inSingletonScope();\n\ncontainer.get('Weapon');\n\ncontainer.onDeactivation('Weapon', (weapon: Weapon): void | Promise<void> => {\n  console.log(`Deactivating weapon with damage ${weapon.damage.toString()}`);\n});\n\nawait container.unbind('Weapon');"}}]);