"use strict";(self.webpackChunk_inversifyjs_inversify_docs_site=self.webpackChunk_inversifyjs_inversify_docs_site||[]).push([["9607"],{1164:function(e,i,n){n.r(i),n.d(i,{frontMatter:()=>t,toc:()=>c,default:()=>u,metadata:()=>r,assets:()=>d,contentTitle:()=>a});var r=JSON.parse('{"id":"ecosystem/binding-decorators","title":"Binding Decorators","description":"The @inversifyjs/binding-decorators package provides a set of handy decorators that streamline configuring bindings in your InversifyJS Container. Instead of manually calling bind for each service, you can use decorators like @provide() to declare and organize dependencies close to their implementation.","source":"@site/docs/ecosystem/binding-decorators.mdx","sourceDirName":"ecosystem","slug":"/ecosystem/binding-decorators","permalink":"/docs/next/ecosystem/binding-decorators","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Binding Decorators"},"sidebar":"tutorialSidebar","previous":{"title":"Migrating from v6","permalink":"/docs/next/guides/migrating-from-v6"}}'),s=n(4076),o=n(9221);let t={sidebar_position:1,title:"Binding Decorators"},a="Inversify binding decorators",d={},c=[{value:"When to use it",id:"when-to-use-it",level:2},{value:"Key features",id:"key-features",level:2},{value:"Documentation",id:"documentation",level:2}];function l(e){let i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"inversify-binding-decorators",children:"Inversify binding decorators"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"@inversifyjs/binding-decorators"})," package provides a set of handy decorators that streamline configuring bindings in your InversifyJS Container. Instead of manually calling ",(0,s.jsx)(i.code,{children:"bind"})," for each service, you can use decorators like ",(0,s.jsx)(i.code,{children:"@provide()"})," to declare and organize dependencies close to their implementation."]}),"\n",(0,s.jsx)(i.h2,{id:"when-to-use-it",children:"When to use it"}),"\n",(0,s.jsx)(i.p,{children:"Use binding decorators when you prefer annotation-driven configuration that:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Reduces container setup boilerplate"}),"\n",(0,s.jsx)(i.li,{children:"Keeps bindings co-located with class definitions"}),"\n",(0,s.jsx)(i.li,{children:"Improves discoverability of services in larger codebases"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"If you need fully programmatic or dynamic binding logic, traditional module / container binding code may still be more appropriate."}),"\n",(0,s.jsx)(i.h2,{id:"key-features",children:"Key features"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"@provide()"})," decorator to auto-register classes"]}),"\n",(0,s.jsx)(i.li,{children:"Support for named and tagged bindings"}),"\n",(0,s.jsx)(i.li,{children:"Layered on top of the core container so it stays optional"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsxs)(i.p,{children:["You can find the full documentation, examples, and usage guidance ",(0,s.jsx)(i.a,{href:"https://inversify.io/binding-decorators/",children:"here"}),"."]})]})}function u(e={}){let{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);