"use strict";(self.webpackChunk_inversifyjs_inversify_docs_site=self.webpackChunk_inversifyjs_inversify_docs_site||[]).push([["9181"],{3482:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>d,toc:()=>h,default:()=>p,metadata:()=>i,assets:()=>l,contentTitle:()=>c});var i=JSON.parse('{"id":"introduction/getting-started","title":"Getting started","description":"Start by installing inversify and reflect-metadata:","source":"@site/docs/introduction/getting-started.mdx","sourceDirName":"introduction","slug":"/introduction/getting-started","permalink":"/docs/next/introduction/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Getting started"},"sidebar":"tutorialSidebar","next":{"title":"Dependency inversion","permalink":"/docs/next/introduction/dependency-inversion"}}'),a=t(4076),r=t(118),s=t(7193),o=t(8299);let d={sidebar_position:1,title:"Getting started"},c="Getting started",l={},h=[];function j(n){let e={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,a.jsxs)(e.p,{children:["Start by installing ",(0,a.jsx)(e.code,{children:"inversify"})," and ",(0,a.jsx)(e.code,{children:"reflect-metadata"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"npm install inversify@alpha reflect-metadata\n"})}),"\n",(0,a.jsx)(e.p,{children:"Next, initialize your first container and add some bindings:"}),"\n",(0,a.jsx)(e.admonition,{type:"warning",children:(0,a.jsxs)(e.p,{children:["Make sure to enable ",(0,a.jsx)(e.a,{href:"https://www.typescriptlang.org/tsconfig/#experimentalDecorators",children:"Experimental decorators"})," and ",(0,a.jsx)(e.a,{href:"https://www.typescriptlang.org/tsconfig/#emitDecoratorMetadata",children:"Emit Decorator Metadata"})," options in your ",(0,a.jsx)(e.code,{children:"tsconfig.json"})," to use this library."]})}),"\n",(0,a.jsx)(s.Z,{language:"ts",children:o}),"\n",(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.code,{children:"@injectable"})," decorator allows both ",(0,a.jsx)(e.code,{children:"Katana"})," and ",(0,a.jsx)(e.code,{children:"Ninja"})," classes to be used as container bindings. The ",(0,a.jsx)(e.code,{children:"@inject"})," decorator provides metadata about ",(0,a.jsx)(e.code,{children:"Ninja"})," dependencies, so the container knows that a ",(0,a.jsx)(e.code,{children:"Katana"})," should be provided as the first argument of ",(0,a.jsx)(e.code,{children:"Ninja"}),"'s constructor."]}),"\n",(0,a.jsxs)(e.p,{children:["Bindings are provided through the ",(0,a.jsx)(e.code,{children:"Container"})," API."]}),"\n",(0,a.jsx)(e.p,{children:"With these two steps, you are ready to initialize your very first ninja!"})]})}function p(n={}){let{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(j,{...n})}):j(n)}},8299:function(n){n.exports="import { Container, inject, injectable } from 'inversify';\n\n@injectable()\nclass Katana {\n  public readonly damage: number = 10;\n}\n\n@injectable()\nclass Ninja {\n  constructor(\n    @inject(Katana)\n    public readonly katana: Katana,\n  ) {}\n}\n\nconst container: Container = new Container();\n\ncontainer.bind(Ninja).toSelf();\ncontainer.bind(Katana).toSelf();\n\nconst ninja: Ninja = container.get(Ninja);\n\nconsole.log(ninja.katana.damage);"}}]);